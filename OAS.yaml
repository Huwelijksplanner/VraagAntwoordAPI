openapi: 3.1.0
x-stoplight:
  id: 8oln1dnmpzx93
info:
  title: Vraag Antwoord Register
  version: '1.0'
  description: >-
    The vraag antwoord registers provided an API for FAQ’s conform the
    https://schema.org/Question and https://schema.org/Answer model. It aims to
    provide an FAQ system comparable to https://stackoverflow.com/ and
    integratable with google search.
  contact:
    name: Ruben van der Linde
    url: www.conduction.nl
    email: ruben@conduction.nl
  license:
    name: EUPL
    url: 'https://ec.europa.eu/info/european-union-public-licence_en'
  summary: A simple API for FAQ related content
servers:
  - url: 'http://localhost:3000'
paths:
  /answers:
    get:
      summary: Retrieve all anwsers
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Answer'
      operationId: get-answers
    post:
      summary: Create a awnser
      operationId: post-answers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
  '/answer/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get a single awnser
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
      operationId: get-answer-id
    put:
      summary: Update a awnser
      operationId: put-answer-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
    delete:
      summary: Delete a awnser
      operationId: delete-answer-id
      responses:
        '200':
          description: OK
  /questions:
    get:
      summary: Get al questions
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Question'
      operationId: get-questions
    post:
      summary: Create a question
      operationId: post-questions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
  '/questions/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get al questions
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
      operationId: get-questions-id
    put:
      summary: Update a question
      operationId: put-questions-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
    delete:
      summary: Delete a question
      operationId: delete-questions-id
      responses:
        '200':
          description: OK
components:
  schemas:
    Answer:
      title: Answer
      x-stoplight:
        id: 1zf6tbtzmpidh
      type: object
      description: 'Bassed on https://schema.org/Answer'
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        author:
          type: string
          description: >-
            The author of this content or rating. Please note that author is
            special in that HTML 5 provides a special mechanism for indicating
            authorship via the rel tag. That is equivalent to this and may be
            used interchangeably.
          format: uri
        downvoteCount:
          type: integer
          example: 5
          default: 0
          description: The number of downvotes this answer has received from the community.
        upvoteCount:
          type: integer
          default: 0
          example: 5
          description: >-
            The number of upvotes this question, answer or comment has received
            from the community.
        question:
          $ref: '#/components/schemas/Question'
        text:
          type: string
          description: >-
            The textual content of this awnser, derived from the
            [CreativeWork](https://schema.org/CreativeWork).
          example: >-
            To be, or not to be, that is the question: Whether 'tis nobler in
            the mind to suffer The slings and arrows of outrageous fortune, Or
            to take Arms against a Sea of troubles, And by opposing end them: to
            die, to sleep No more; and by a sleep, to say we end The heart-ache,
            and the thousand natural shocks That Flesh is heir to? 'Tis a
            consummation Devoutly to be wished. To die, to sleep, To sleep,
            perchance to Dream; aye, there's the rub, For in that sleep of
            death, what dreams may come, When we have shuffled off this mortal
            coil, Must give us pause. There's the respect That makes Calamity of
            so long life: For who would bear the Whips and Scorns of time, The
            Oppressor's wrong, the proud man's Contumely, The pangs of dispised
            Love, the Law’s delay, The insolence of Office, and the spurns That
            patient merit of th'unworthy takes, When he himself might his
            Quietus make With a bare Bodkin? Who would Fardels bear, [F: these
            Fardels] To grunt and sweat under a weary life, But that the dread
            of something after death, The undiscovered country, from whose bourn
            No traveller returns, puzzles the will, And makes us rather bear
            those ills we have, Than fly to others that we know not of? Thus
            conscience does make cowards of us all, And thus the native hue of
            Resolution Is sicklied o'er, with the pale cast of Thought, And
            enterprises of great pitch and moment, [F: pith] With this regard
            their Currents turn awry, [F: away] And lose the name of Action.
            Soft you now, The fair Ophelia? Nymph, in thy Orisons Be all my sins
            remember'd.
        answerExplanation:
          type: string
          description: >-
            A step-by-step or full explanation about Answer. Can outline how
            this Answer was achieved or contain more broad clarification or
            statement about it.
      required:
        - author
        - text
    Question:
      title: Question
      x-stoplight:
        id: 1zf6tbtzmpidh
      type: object
      description: 'Bassed on https://schema.org/Question'
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        author:
          type: string
          description: >-
            The author of this content or rating. Please note that author is
            special in that HTML 5 provides a special mechanism for indicating
            authorship via the rel tag. That is equivalent to this and may be
            used interchangeably.
          format: uri
        downvoteCount:
          type: integer
          example: 5
          default: 0
          description: The number of downvotes this answer has received from the community.
        upvoteCount:
          type: integer
          default: 0
          example: 5
          description: >-
            The number of upvotes this question, answer or comment has received
            from the community.
        awnsers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
        acceptedAnswer:
          $ref: '#/components/schemas/Answer'
        text:
          type: string
          description: >-
            The textual content of this question, derived from the
            [CreativeWork](https://schema.org/CreativeWork).
          example: To be or not te be
        eduQuestionType:
          type: string
          description: >-
            For questions that are part of learning resources (e.g. Quiz),
            eduQuestionType indicates the format of question being given.
            Example: "Multiple choice", "Open ended", "Flashcard".
      required:
        - author
        - text
